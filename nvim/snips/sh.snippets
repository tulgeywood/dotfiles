# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet if "if statement" bA
if ${1:condition}; then
	${0:${VISUAL:# conditional actions}}
fi
endsnippet

snippet elif "elif statement" bA
elif ${1:condition}; then
	${0:${VISUAL}}
endsnippet

snippet for "for loop" b
for (( ${2:i} = 0; $2 < ${1:count}; $2++ )); do
	${0:${VISUAL}}
done
endsnippet

snippet fori "for in looop" bA
for ${1:needle} in ${2:haystack}; do
	${0:${VISUAL}}
done
endsnippet

snippet while "while loop" A
while ${1:condition}; do
	${0:${VISUAL}}
done
endsnippet

snippet until "until loop" bA
until ${1:condition}; do
	${0:${VISUAL}}
done
endsnippet

snippet case "case statement" bA
case ${1:word} in
	${2:pattern})
		${0};;
esac
endsnippet

snippet go "while getopts" bA
while getopts '${1:o}' ${2:opts}; do
	case $$2 in
	${3:o0})
		${0:#staments};;
	esac
done
endsnippet

snippet fun "function" bA
function ${1:function_name}() {
	${0:#function_body}
}
endsnippet

snippet CURRENT_USER= "current user" bA
CURRENT_USER="$(scutil <<< "show State:/Users/ConsoleUser" | awk '/Name :/ && ! /loginwindow/ {print \$3}')"
endsnippet
